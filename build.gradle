plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
}

def suffix = (version.toString().endsWith("SNAPSHOT")) ? "snapshots" : "releases"
def nexusUser = System.getProperty("nexusUser") ?: System.getenv('NEXUS_USERNAME')
def nexusPassword = System.getProperty("nexusPassword") ?: System.getenv('NEXUS_PASSWORD')
def nexusProxyUrl = System.getProperty("nexusProxyUrl") ?: 'https://sfcirelease.sfci.buildndeliver-s.aws-esvc1-useast2.aws.sfdc.is'

repositories {
    mavenCentral()
    maven {
        metadataSources {
            artifact()
        }
        name "nexus"
        url "${nexusProxyUrl}/nexus/content/groups/public/"
        credentials(PasswordCredentials) {
            username nexusUser
            password nexusPassword
        }
    }
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'java-library'

    repositories {
        mavenCentral()
        // reach out to public nexus endpoint for public artifacts
        maven {
            name "nexus"
            url nexusProxyUrl
            credentials(PasswordCredentials) {
                username nexusUser
                password nexusPassword
            }
        }
        maven {
            url "${nexusProxyUrl}/nexus/content/repositories/central/"
            credentials {
                username nexusUser
                password nexusPassword
            }
        }
        // repositories mentioned below are for com.salesforce.* artifacts
        // for releases
        maven {
            url "${nexusProxyUrl}/nexus/content/repositories/Rengin/"
            credentials {
                username nexusUser
                password nexusPassword
            }
        }
        maven {
            url "${nexusProxyUrl}/nexus/content/repositories/gradle-plugins/"
            credentials {
                username nexusUser
                password nexusPassword
            }
        }
        maven {
            url "${nexusProxyUrl}/nexus/content/repositories/conflient.io/"
            credentials {
                username nexusUser
                password nexusPassword
            }
        }
        maven {
            url "${nexusProxyUrl}/nexus/content/repositories/repo.spring.io/"
            credentials {
                username nexusUser
                password nexusPassword
            }
        }
        maven {
            url "${nexusProxyUrl}/nexus/content/repositories/thirdparty/"
            credentials {
                username nexusUser
                password nexusPassword
            }
        }

        // for snapshots
        maven {
            url "${nexusProxyUrl}/nexus/content/groups/public/"
            credentials {
                username nexusUser
                password nexusPassword
            }
        }
    }

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:2.7.3")
        }
    }

    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'
        testCompileOnly 'org.projectlombok:lombok:1.18.24'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'

        implementation ('org.springframework.boot:spring-boot-starter-web'){
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
        implementation("org.springframework.boot:spring-boot-starter-log4j2")
        implementation("org.springframework.hateoas:spring-hateoas")
        testImplementation("junit:junit:4.12")
        testImplementation("org.powermock:powermock-reflect:1.6.1")
        testImplementation('org.springframework.boot:spring-boot-starter-test'){
            exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        }
    }

    jar {
        enabled = false
    }

    compileJava {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    println("---------------------------------------------------------------------------------------------------------")
    println(":${repositories}")

test {
    reports {
        junitXml.enabled = true
        html.enabled = true
    }
}
}
